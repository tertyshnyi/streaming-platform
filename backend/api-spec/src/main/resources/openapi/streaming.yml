openapi: 3.0.1
info:
  title: User API
  description: API for streaming platform
  version: 1.0.0

paths:
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - User
      requestBody:
        required: true
        description: New user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'

  /users/{id}:
    get:
      summary: Get user by ID
      operationId: getUserById
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: User not found

    put:
      summary: Update user
      operationId: updateUser
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      requestBody:
        description: Updated user data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: User not found

    delete:
      summary: Delete user
      operationId: deleteUser
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      responses:
        '204':
          description: User successfully deleted
        '404':
          description: User not found

components:
  schemas:
    UserRole:
      type: string
      enum:
        - USER
        - RELEASER
        - MODERATOR
        - ADMIN

    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: User's name
        email:
          type: string
          description: User's email
        password:
          type: string
          description: User's password
        phoneNumber:
          type: string
          description: User's phone number
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/UserRole'
          description: User roles (can be 'USER', 'RELEASER', 'MODERATOR' or 'ADMIN')
        profileImg:
          type: string
          description: User's profile image URL

    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: User ID (auto-generated by the server)
        name:
          type: string
          description: User's name
        email:
          type: string
          description: User's email
        phoneNumber:
          type: string
          description: User's phone number
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/UserRole'
          description: User roles
        profileImg:
          type: string
          description: User's profile image URL
        createdAt:
          type: string
          format: date-time
